@page "/"

<PageTitle>Simple Blog - Home</PageTitle>

<!-- Hero Section -->
<header class="bg-white">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center">
            <h2 class="text-4xl font-bold text-gray-900 mb-4">Welcome to Our Blog</h2>
            <p class="text-xl text-gray-600 max-w-2xl mx-auto">Discover insights, tutorials, and stories from our community of writers and developers.</p>
        </div>
    </div>
</header>

<main class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Featured Post -->
    @if (_featuredPost is not null)
    {
        <section class="mb-12">
            <h3 class="text-2xl font-bold text-gray-900 mb-6">Featured Post</h3>
            <article class="bg-white rounded-lg shadow-md overflow-hidden">
                <div class="md:flex">
                    <div class="md:w-1/3">
                        <img src="@(_featuredPost.Image ?? "https://placeholder.pics/svg/400x300/DFEEF6-B6BEC3/000000")" alt="Featured post image" class="w-full h-48 md:h-full object-cover">
                    </div>
                    <div class="md:w-2/3 p-6">
                        <div class="flex items-center mb-2">
                            <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded">@(_featuredPost.Tags.FirstOrDefault() ?? string.Empty)</span>
                            <span class="text-gray-500 text-sm ml-3">@($"{_featuredPost.Date:MMM dd, yyyy}")</span>
                        </div>
                        <h4 class="text-2xl font-bold text-gray-900 mb-3">
                            <a href="@_featuredPost.Slug" class="hover:text-blue-600 transition-colors">@_featuredPost.Title</a>
                        </h4>
                        <p class="text-gray-600 mb-4">@_featuredPost.Description</p>
                        <Author Page=@_featuredPost />
                    </div>
                </div>
            </article>
        </section>
    }

    <!-- Recent Posts -->
    <section>
        <h3 class="text-2xl font-bold text-gray-900 mb-6">Recent Posts</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var post in _recentPosts)
            {
                <PostCard Page="@post" />
            }
        </div>
    </section>

    <!-- Pagination -->
    @if (_pages.Count > 0)
    {
        <div class="flex justify-center mt-12">
            <div class="flex space-x-1">
                <a href="#" class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-l-md hover:bg-gray-50" @onclick=PreviousPage>Previous</a>
                @foreach (var item in _pages)
                {
                    <a href="#" class="px-3 py-2 text-sm font-medium @(item == _currentPage ? "text-white bg-blue-600 border-blue-600" : "text-gray-700 bg-white border-gray-300 hover:bg-gray-50")"
                       @onclick="() => PageSelected(item)">@item</a>
                }
                <a href="#" class="px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-r-md hover:bg-gray-50" @onclick=NextPage>Next</a>
            </div>
        </div>
    }
</main>

<!-- Footer -->
<Footer />

@code {
    private PageModel? _featuredPost;

    private List<PageModel> _recentPosts = [];

    private List<int> _pages = [];

    private int _currentPage = 1;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (GeneratedContentIndex.GetPages().Count > 0)
        {
            var pages = GeneratedContentIndex.GetPages()
                .OrderByDescending(p => p.Date)
                .ToList();

            _featuredPost = pages.FirstOrDefault(p => p.Metadata.ContainsKey("Featured")) ?? pages.FirstOrDefault();

            _recentPosts = pages
                .Where(p => p != _featuredPost && !p.Draft)
                .Take(6)
                .ToList();

            if (pages.Count > 6)
            {
                _pages = Enumerable.Range(1, (int)Math.Ceiling((double)(pages.Count - 1) / 6)).ToList();
            }
        }
    }

    private void PageSelected(int pageNumber)
    {
        _recentPosts = GeneratedContentIndex.GetPages()
            .Where(p => !p.Draft && p.Slug.Contains("/posts/", StringComparison.OrdinalIgnoreCase))
            .OrderByDescending(p => p.Date)
            .Skip((pageNumber - 1) * 6)
            .Take(6)
            .ToList();
    }

    private void NextPage()
    {
        if (_currentPage < _pages.Count)
        {
            _currentPage++;
            PageSelected(_currentPage);
        }
    }

    private void PreviousPage()
    {
        if (_currentPage > 1)
        {
            _currentPage--;
            PageSelected(_currentPage);
        }
    }
}